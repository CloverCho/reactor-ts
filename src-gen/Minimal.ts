import {Variable, Priority, VarList, Mutations, Util, Readable, Schedulable, Writable, Named, Reaction, Deadline, Action, Startup, Scheduler, Timer, Reactor, Port, OutPort, InPort, App } from "./reactor";
import {TimeUnit,TimeInterval, UnitBasedTimeInterval, TimeInstant, Origin, getCurrentPhysicalTime } from "./time"
// Code generated by the Lingua Franca compiler for reactor Minimal in Minimal
// =============== START reactor class Minimal
class Minimal extends App {
    t: Timer;
    constructor(name: string, timeout: TimeInterval | null, success?: ()=> void, fail?: ()=>void) {
        super(timeout, success, fail);
        this.t = new Timer(this, 0, 0);
        this.addReaction(new class<T> extends Reaction<T> {
            //@ts-ignore
            react() {
                var self = this.parent as Minimal;
                console.log("Hello World.");
            }
        }(this, this.check(this.t, ), this.check()));
    }
}
// =============== END reactor class Minimal

// ************* Instance Minimal of class Minimal
let _app = new Minimal('Minimal', null)
// ************* Starting Runtime for Minimal of class Minimal
_app._start();
