import {Variable, Priority, VarList, Mutations, Util, Readable, Schedulable, Writable, Named, Reaction, Deadline, Action, Startup, Scheduler, Timer, Reactor, Port, OutPort, InPort, App } from "./reactor";
import {TimeUnit,TimeInterval, UnitBasedTimeInterval, TimeInstant, Origin, getCurrentPhysicalTime } from "./time"
// Code generated by the Lingua Franca compiler for reactor Count in Count
// =============== START reactor class Count
class Count extends Reactor {
    t: Timer;
    i: number; // State
    c: OutPort<number>;
    constructor(parent:Reactor) {
        super(parent);
        this.t = new Timer(this, new UnitBasedTimeInterval(0, TimeUnit.msec), new UnitBasedTimeInterval(1, TimeUnit.sec));
        this.i = 0; // State
        this.c = new OutPort<number>(this);
        this.addReaction(new class<T> extends Reaction<T> {
            //@ts-ignore
            react(c: Writable<number>, ) {
                var self = this.parent as Count;
                self.i++;
                c.set(self.i);
            }
        }(this, this.check(this.t, ), this.check(this.getWritable(this.c),)));
    }
}
// =============== END reactor class Count

