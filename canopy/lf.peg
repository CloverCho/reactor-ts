# A grammar file to be used with Canopy:
# https://www.npmjs.com/package/canopy
#
# Explanation and syntax reference: http://canopy.jcoglan.com/
#
# To build:
# `npm install -g canopy`
# `canopy lf.peg --lang javascript` (or java | python | ruby)
grammar LinguaFranca
  Grammar <- Spacing Expression+

  Expression <- Statement ";" Spacing /  EmbeddedStatement Spacing 
  
  EmbeddedStatement <- "{=" ( !"=" . / "=" !"}" .)* "=}"
  #EmbeddedStatement <- "{=" ([a-zA-Z0-9] / [\s] / ";" / '(' / ')' / ',' )* "=}"
  
  Statement <- Declaration #only statements (for now?)
  
  Declaration <- Target / Actor / Reaction / InOutParamTrig  # is this right?

  Target <- "target" Spacing id

  Actor  <- "actor" _ Header _ Body

  Header <- id _ Args / id
  
  Args <- "(" _ Param* _ ")"
  
  InOutParamTrig <- Input / Output / Parameter / Trigger

  Input <- 'input' _ Param

  Output <- 'output' _ Param

  Parameter <- 'parameter' _ Param

  Trigger <- 'trigger' _ Param

  Param <- id (":" Type)? Def?

  Type <- id

  Def <- "(1000)"

  Body <- "{" Spacing Expression* "}"

  id <- [a-zA-Z]+
  
  Reaction <- "reaction" Args (_ "->" _ ( Args / id ) )? Spacing EmbeddedStatement

  Spacing  <- ([\s] / Comment)*

  Comment  <- '//' (!EndOfLine .)* EndOfLine

  EndOfLine  <- '\r\n' / '\n' / '\r'

  EndOfFile  <- !.

  _ <- [\s]*

  __ <- [\s]+
